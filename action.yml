name: "Publish to NuGet"
description: "Automatic project detection, multi-package support, better error detection and improved logging. Drop-in replacement for publish-nuget clones."

inputs:
  NUGET_KEY:
    description: "NuGet API key to authenticate on the NuGet server. DO NOT PUT THE KEY DIRECTLY HERE. Use GitHub Secrets (e.g., \${{ secrets.YOUR_NUGET_API_KEY }}) instead."
    required: true
  PROJECT_FILE_PATH:
    description: >-
      Full path to a project file or a JSON array of project file paths.
      (Examples: `src/MyNuGetProject/MyNuGetProject.csproj` or
      `["src/Project1/Project1.csproj", "src/Project2/Project2.csproj"]`).
      If not specified, the action will auto-discover a project (or projects, if PUBLISH_ALL_PROJECTS is true)
      that contains `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`.
    required: false
  PUBLISH_ALL_PROJECTS:
    description: "If set to true, the action ignores PROJECT_FILE_PATH and auto-discovers and publishes all projects with `<GeneratePackageOnBuild>true</GeneratePackageOnBuild>`."
    required: false
    default: false
  NUGET_SOURCE:
    description: "URL to the NuGet server. (Default: https://api.nuget.org)"
    required: false
    default: "https://api.nuget.org"
  INCLUDE_SYMBOLS:
    description: "Add symbols to the NuGet package. (Default: false)"
    required: false
    default: false
  TAG_COMMIT:
    description: "Tag the current Git commit upon successful upload. (This will prevent publish if the tag already exists.) (Default: false)"
    required: false
    default: false
  TAG_FORMAT:
    description: "Git tag format. Use * as a placeholder for the version number. (Default: v*)"
    required: false
    default: "v*"
  PACKAGE_NAME:
    description: "NuGet package name used for checking if the package version already exists on the NuGet server. (Default: extracted from PROJECT_FILE_PATH)"
    required: false
  VERSION_FILE_PATH:
    description: "Path to the file containing the version number to extract using regex. (Default: same as PROJECT_FILE_PATH)"
    required: false
  VERSION_REGEX:
    description: "Regex pattern with a capturing group to extract version info. (Default: ^\\s*<Version>\\s*(.*?)\\s*<\\/Version>\\s*$)"
    required: false
    default: "^\\s*<Version>\\s*(.*?)\\s*<\\/Version>\\s*$"
  VERSION_STATIC:
    description: "Provide a static version instead of extracting from a file. Overrides VERSION_FILE_PATH and VERSION_REGEX. (e.g., \${{ env.GitBuildVersionSimple }})"
    required: false
  REBUILD_PROJECT:
    description: "Rebuild the project in release mode before packaging. (Default: true)"
    required: false
    default: true
  LOG_LEVEL:
    description: "Log level for debugging (DEBUG, INFO, WARN). (Default: DEBUG)"
    required: false
    default: DEBUG

outputs:
  VERSION:
    description: "Version of the associated git tag (if TAG_COMMIT is true)."
  PACKAGE_NAME:
    description: "Name of the generated NuGet package."
  PACKAGE_PATH:
    description: "Path to the generated NuGet package."
  SYMBOLS_PACKAGE_NAME:
    description: "Name of the generated symbols package (if INCLUDE_SYMBOLS is true)."
  SYMBOLS_PACKAGE_PATH:
    description: "Path to the generated symbols package (if INCLUDE_SYMBOLS is true)."

runs:
  using: "node20"
  main: "action.js"

branding:
  icon: package
  color: blue
